[hidden] {
  display: none !important; }

@media print {
  #nhsuk-cookie-banner {
    display: none; }
  #nhsuk-cookie-banner .nhsuk-width-container {
    display: none; }
  #nhsuk-cookie-banner h2 {
    display: none; }
  #nhsuk-cookie-banner p {
    display: none; }
  .nhsuk-back-link {
    display: none; }
  .nhsuk-back-link .nhsuk-width-container {
    display: none; }
  .nhsuk-back-link h2 {
    display: none; }
  .nhsuk-back-link p {
    display: none; }
  .nhsuk-grid-column-one-third {
    display: none; }
  .nhsuk-grid-column-one-third .nhsuk-width-container {
    display: none; }
  .nhsuk-grid-column-one-third h2 {
    display: none; }
  .nhsuk-grid-column-one-third p {
    display: none; }
  .nhsuk-pagination {
    display: none; }
  .nhsuk-pagination .nhsuk-width-container {
    display: none; }
  .nhsuk-pagination h2 {
    display: none; }
  .nhsuk-pagination p {
    display: none; }
  a[href^="tel"]::after {
    display: none; }
  a[href^="tel"]::after .nhsuk-width-container {
    display: none; }
  a[href^="tel"]::after h2 {
    display: none; }
  a[href^="tel"]::after p {
    display: none; }
  a[id]::after {
    display: none; }
  a[id]::after .nhsuk-width-container {
    display: none; }
  a[id]::after h2 {
    display: none; }
  a[id]::after p {
    display: none; }
  .nhsuk-width-container {
    width: 100%; } }

.o-flex {
  display: flex; }

.o-flex--align-center {
  align-items: center; }

.o-flex__grow {
  flex-grow: 1; }

@media (min-width: 320px) {
  .o-flex\@mobile {
    display: flex; } }

@media (min-width: 641px) {
  .o-flex\@tablet {
    display: flex; } }

@media (min-width: 769px) {
  .o-flex\@desktop {
    display: flex; } }

@media (min-width: 990px) {
  .o-flex\@large-desktop {
    display: flex; } }

.prototype .page__breadcrumbs, .prototype
.page__header, .prototype
.page__main, .prototype
.page__leftbar, .prototype
.page__rightbar, .prototype
.page__footer, .prototype
.page__feature, .prototype
.page__nav {
  border: 2px dashed #CCC;
  min-height: 20px; }

.page.has-microhero .page__header {
  padding-top: 0; }
  .page.has-microhero .page__header .hee-microhero {
    margin-bottom: 48px; }

.page__header h1 ~ span {
  margin-top: -40px;
  margin-bottom: 24px; }

.page__main {
  padding-bottom: 40px; }

.page--fullwidth .page__header {
  padding-top: 48px; }
  .page--fullwidth .page__header h1, .page--fullwidth .page__header p, .page--fullwidth .page__header span {
    max-width: 66.6667%; }

.page--fullwidth .page__main {
  padding-bottom: 40px; }

@media (max-width: 48.0525em) {
  .page--fullwidth .page__header h1, .page--fullwidth .page__header p, .page--fullwidth .page__header span {
    max-width: 100%; } }

.page--leftbar .page__header {
  padding-top: 48px; }
  .page--leftbar .page__header h1, .page--leftbar .page__header p, .page--leftbar .page__header span {
    max-width: 66.6667%; }

.page--leftbar .page__layout {
  box-sizing: border-box;
  display: flex;
  flex-wrap: wrap; }
  @media screen\0 {
    .page--leftbar .page__layout:after {
      content: "";
      display: table;
      clear: both; } }
  .page--leftbar .page__layout .page__leftbar {
    box-sizing: border-box;
    width: 31.25%;
    flex: 0 0 31.25%; }
    @media screen\0 {
      .page--leftbar .page__layout .page__leftbar {
        float: left;
        flex: none; } }
  .page--leftbar .page__layout .page__main {
    box-sizing: border-box;
    width: 66.66667%;
    flex: 0 0 66.66667%;
    margin-left: 2.08333%; }
    @media screen\0 {
      .page--leftbar .page__layout .page__main {
        float: left;
        flex: none; } }

@media (max-width: 48.0525em) {
  .page--leftbar .page__header h1, .page--leftbar .page__header p, .page--leftbar .page__header span {
    max-width: 100%; }
  .page--leftbar .page__layout .page__leftbar,
  .page--leftbar .page__layout .page__main {
    box-sizing: border-box;
    width: 100%;
    flex: 0 0 100%;
    margin-left: 0%; } }
  @media screen\0  and (max-width: 48.0525em) {
    .page--leftbar .page__layout .page__leftbar,
    .page--leftbar .page__layout .page__main {
      float: left;
      flex: none; } }

.page--rightbar {
  padding-bottom: 40px; }
  .page--rightbar .page__header {
    padding-top: 48px; }
    .page--rightbar .page__header h1, .page--rightbar .page__header p, .page--rightbar .page__header span {
      max-width: 66.6667%; }
  .page--rightbar .page__layout {
    box-sizing: border-box;
    display: flex;
    flex-wrap: wrap; }
    @media screen\0 {
      .page--rightbar .page__layout:after {
        content: "";
        display: table;
        clear: both; } }
    .page--rightbar .page__layout .page__rightbar {
      box-sizing: border-box;
      width: 31.25%;
      flex: 0 0 31.25%;
      margin-left: 2.08333%; }
      @media screen\0 {
        .page--rightbar .page__layout .page__rightbar {
          float: left;
          flex: none; } }
    .page--rightbar .page__layout .page__main {
      box-sizing: border-box;
      width: 66.66667%;
      flex: 0 0 66.66667%; }
      @media screen\0 {
        .page--rightbar .page__layout .page__main {
          float: left;
          flex: none; } }
  @media (max-width: 48.0525em) {
    .page--rightbar .page__header h1, .page--rightbar .page__header p, .page--rightbar .page__header span {
      max-width: 100%; }
    .page--rightbar .page__layout .page__rightbar,
    .page--rightbar .page__layout .page__main {
      box-sizing: border-box;
      width: 100%;
      flex: 0 0 100%;
      margin-left: 0%; } }
  @media screen\0  and (max-width: 48.0525em) {
    .page--rightbar .page__layout .page__rightbar,
    .page--rightbar .page__layout .page__main {
      float: left;
      flex: none; } }

.page--template-prototype .page__leftbar {
  margin-top: 48px;
  margin-bottom: 48px; }
  .page--template-prototype .page__leftbar nav {
    border-top: 1px solid #DDD;
    padding-top: 12px; }
    .page--template-prototype .page__leftbar nav h3 {
      font-weight: bold;
      font-size: 19px;
      font-size: 1.1875rem;
      line-height: 1.25;
      color: #4c6272;
      margin-bottom: 12px;
      padding-top: 4px; }
    .page--template-prototype .page__leftbar nav ul {
      list-style: none;
      margin: 0 0 24px 0;
      padding: 0; }
      .page--template-prototype .page__leftbar nav ul li {
        font-size: 16px;
        font-size: 1rem;
        line-height: 1.3; }
        .page--template-prototype .page__leftbar nav ul li a {
          color: #005eb8;
          text-decoration: none; }

/* NHSUK-HEE-Blocklinks */
.nhsuk-hee-blocklinks {
  padding-top: 24px;
  padding-bottom: 24px; }
  .nhsuk-hee-blocklinks .nhsuk-list-blocklinks {
    list-style: none;
    padding-left: 0; }
    .nhsuk-hee-blocklinks .nhsuk-list-blocklinks li {
      display: inline-block;
      margin: 2px 0;
      width: 100%; }
      .nhsuk-hee-blocklinks .nhsuk-list-blocklinks li:last-of-type {
        margin-bottom: 2px; }
      .nhsuk-hee-blocklinks .nhsuk-list-blocklinks li a {
        background: #005eb8;
        color: #ffffff;
        display: block;
        padding: 12px 24px;
        position: relative;
        text-decoration: none;
        width: 100%; }
        .nhsuk-hee-blocklinks .nhsuk-list-blocklinks li a:hover {
          background: #002f5c;
          box-shadow: none;
          text-decoration: underline; }
        .nhsuk-hee-blocklinks .nhsuk-list-blocklinks li a:active {
          background: #002f5c; }
        .nhsuk-hee-blocklinks .nhsuk-list-blocklinks li a:focus {
          background: #ffeb3b;
          box-shadow: inset 0 -4px 0 0 #212b32;
          color: #212b32; }
          .nhsuk-hee-blocklinks .nhsuk-list-blocklinks li a:focus .nhsuk-icon {
            fill: #212b32; }
          .nhsuk-hee-blocklinks .nhsuk-list-blocklinks li a:focus:hover {
            text-decoration: none; }
        .nhsuk-hee-blocklinks .nhsuk-list-blocklinks li a .nhsuk-icon {
          fill: #ffffff;
          height: 24px;
          position: absolute;
          right: 12px;
          top: 14px;
          width: 24px; }
  @media (min-width: 48.0625em) {
    .nhsuk-hee-blocklinks .nhsuk-list-blocklinks--two-columns {
      column-count: 2;
      column-gap: 4px; }
    .nhsuk-hee-blocklinks .nhsuk-list-blocklinks--one-column {
      column-gap: 4px; } }
  @media (max-width: 40.0525em) {
    .nhsuk-hee-blocklinks .nhsuk-list-blocklinks li a {
      padding: 12px 16px; }
      .nhsuk-hee-blocklinks .nhsuk-list-blocklinks li a .nhsuk-icon {
        top: 12px; } }

/* Old blocklinks */
.nhsuk-blocklinks {
  padding-top: 24px;
  padding-bottom: 24px; }
  .nhsuk-blocklinks .nhsuk-list-blocklinks {
    list-style: none;
    padding-left: 0; }
    .nhsuk-blocklinks .nhsuk-list-blocklinks li {
      display: inline-block;
      margin: 2px 0;
      width: 100%; }
      .nhsuk-blocklinks .nhsuk-list-blocklinks li:last-of-type {
        margin-bottom: 2px; }
      .nhsuk-blocklinks .nhsuk-list-blocklinks li a {
        background: #005eb8;
        color: #ffffff;
        display: block;
        padding: 12px 24px;
        position: relative;
        text-decoration: none;
        width: 100%; }
        .nhsuk-blocklinks .nhsuk-list-blocklinks li a:hover {
          background: #002f5c;
          box-shadow: none;
          text-decoration: underline; }
        .nhsuk-blocklinks .nhsuk-list-blocklinks li a:active {
          background: #002f5c; }
        .nhsuk-blocklinks .nhsuk-list-blocklinks li a:focus {
          background: #ffeb3b;
          box-shadow: inset 0 -4px 0 0 #212b32;
          color: #212b32; }
          .nhsuk-blocklinks .nhsuk-list-blocklinks li a:focus .nhsuk-icon {
            fill: #212b32; }
          .nhsuk-blocklinks .nhsuk-list-blocklinks li a:focus:hover {
            text-decoration: none; }
        .nhsuk-blocklinks .nhsuk-list-blocklinks li a .nhsuk-icon {
          fill: #ffffff;
          height: 24px;
          position: absolute;
          right: 12px;
          top: 14px;
          width: 24px; }
  @media (min-width: 48.0625em) {
    .nhsuk-blocklinks .nhsuk-list-blocklinks--two-columns {
      column-count: 2;
      column-gap: 4px; }
    .nhsuk-blocklinks .nhsuk-list-blocklinks--one-column {
      column-gap: 4px; } }
  @media (max-width: 40.0525em) {
    .nhsuk-blocklinks .nhsuk-list-blocklinks li a {
      padding: 12px 16px; }
      .nhsuk-blocklinks .nhsuk-list-blocklinks li a .nhsuk-icon {
        top: 12px; } }

/* Breadcrumbs */
.nhsuk-hee-breadcrumb {
  background-color: transparent; }

/* Old breadcrumbs */
.nhsuk-breadcrumb {
  background-color: transparent; }

/* Add new cookie code here */
.nhsuk-cookie-banner {
  padding-top: 24px; }
  .nhsuk-cookie-banner ul, .nhsuk-cookie-banner li {
    list-style: none;
    padding: 0;
    margin: 0; }
  @media (min-width: 40.0625em) {
    .nhsuk-cookie-banner li {
      display: inline-block;
      margin-right: 24px; } }

/* Policy table - corrected typo */
.nhsuk__policy-table {
  border: none; }
  .nhsuk__policy-table .nhsuk__expires {
    white-space: nowrap; }

/* NHSUK-Header__container */
.nhsuk-header__container {
  padding: 20px 0; }

/* NHSUK-Header__content */
.nhsuk-header__content {
  float: right;
  margin: -48px 0 0 0;
  z-index: 10; }
  @media (min-width: 48.0625em) {
    .nhsuk-header__content {
      margin: 0; } }
  .nhsuk-header__content.js-show {
    border-bottom: 0;
    width: 100%; }
    @media (min-width: 48.0625em) {
      .nhsuk-header__content.js-show {
        width: auto; } }
  .nhsuk-header__content.no-search {
    min-height: auto; }

.nhsuk-header__link .nhsuk-organisation-name,
.nhsuk-header__link .nhsuk-organisation-descriptor {
  display: block; }

/* NHSUK-Header__logo */
.nhsuk-header__logo {
  display: block;
  float: none;
  max-width: 300px; }

/* NHSUK-Header__multilogo */
.nhsuk-header__multilogo {
  display: flex;
  flex-direction: column; }
  @media (min-width: 48.0625em) {
    .nhsuk-header__multilogo {
      flex-direction: row;
      width: 100%; } }
  .nhsuk-header__multilogo .nhsuk-header__logo-home {
    margin-bottom: 0 !important;
    order: 10; }
    @media (min-width: 48.0625em) {
      .nhsuk-header__multilogo .nhsuk-header__logo-home {
        margin-bottom: 0;
        order: 0; } }
  .nhsuk-header__multilogo .nhsuk-header__logo {
    margin-bottom: 8px; }
    @media (min-width: 48.0625em) {
      .nhsuk-header__multilogo .nhsuk-header__logo {
        display: inline-block;
        margin-bottom: 0;
        margin-right: 16px;
        vertical-align: top; } }

/* NHSUK-Header__search */
.nhsuk-header__search {
  display: inline-block;
  width: 100%; }
  .nhsuk-header__search .nhsuk-header__search-wrap {
    width: 100%; }
    .nhsuk-header__search .nhsuk-header__search-wrap.js-show {
      padding-top: 32px;
      margin: 0;
      display: block; }
      @media (min-width: 48.0625em) {
        .nhsuk-header__search .nhsuk-header__search-wrap.js-show {
          padding-top: 0; } }
    .nhsuk-header__search .nhsuk-header__search-wrap .nhsuk-header__search-form {
      padding: 0;
      margin-bottom: 8px; }
      @media (min-width: 40.0625em) {
        .nhsuk-header__search .nhsuk-header__search-wrap .nhsuk-header__search-form {
          margin-bottom: 0; } }
  .nhsuk-header__search .nhsuk-header__search-toggle {
    position: relative; }

/* NHSUK-Header__search - Blue BG variation */
.nhsuk-header--white2 .nhsuk-header__search-wrap form {
  background-color: #005eb8; }

.nhsuk-header--white2 .nhsuk-header__search-wrap .nhsuk-search__close {
  background-color: #005eb8; }
  .nhsuk-header--white2 .nhsuk-header__search-wrap .nhsuk-search__close .nhsuk-icon__close {
    fill: #ffffff; }

/* NHSUK-Header__navigation */
.nhsuk-header__navigation {
  overflow: visible; }
  .nhsuk-header__navigation.js-show .nhsuk-width-container {
    margin: 0 16px; }
    @media (min-width: 61.875em) {
      .nhsuk-header__navigation.js-show .nhsuk-width-container {
        margin: 0 auto; } }

.nhsuk-header__navigation-link {
  font-size: 1rem; }

.nhsuk-header__navigation-item {
  display: block; }

@media (max-width: 48.0525em) {
  .nhsuk-header__navigation .nhsuk-width-container {
    margin: 0; } }

/* NHSUK-Header__menu */
.nhsuk-header__menu {
  display: inline-block;
  float: none;
  position: absolute;
  right: 46px; }
  @media (min-width: 40.0625em) {
    .nhsuk-header__menu {
      left: -68px;
      right: 0; } }
  @media (min-width: 61.875em) {
    .nhsuk-header__menu {
      position: absolute;
      top: 0;
      left: 0; } }
  .nhsuk-header__menu .nhsuk-header__menu-toggle {
    right: auto; }
  .no-search .nhsuk-header__menu {
    position: relative; }

/* NHSUK-Subnav */
.nhsuk-subnav .nhsuk-header__navigation-link {
  position: relative; }
  @media (min-width: 61.875em) {
    .nhsuk-subnav .nhsuk-header__navigation-link {
      padding-right: 28px; }
      .nhsuk-subnav .nhsuk-header__navigation-link:focus {
        text-decoration: none; }
      .nhsuk-subnav .nhsuk-header__navigation-link:focus .nhsuk-icon {
        fill: #212b32; } }
  .nhsuk-subnav .nhsuk-header__navigation-link .nhsuk-icon {
    fill: #005eb8;
    height: 22px;
    right: 16px;
    transform: rotate(0) translateX(50%);
    width: 22px; }
    @media (min-width: 61.875em) {
      .nhsuk-subnav .nhsuk-header__navigation-link .nhsuk-icon {
        display: block;
        fill: #ffffff;
        right: 0;
        transform: rotate(90deg); } }

.nhsuk-subnav .nhsuk-subnav__list {
  display: none;
  margin: 0;
  padding: 0;
  list-style: none;
  text-align: left;
  z-index: 1; }
  @media (min-width: 61.875em) {
    .nhsuk-subnav .nhsuk-subnav__list {
      border: 1px solid #d8dde0;
      border-bottom-width: 4px;
      background: #ffffff;
      display: none;
      list-style: none;
      min-width: 16rem;
      padding: 0;
      position: absolute;
      right: 0;
      text-align: left;
      z-index: 9999; } }
  .nhsuk-subnav .nhsuk-subnav__list .nhsuk-subnav__list-item {
    margin-bottom: 0;
    border-top: 1px solid #f0f4f5; }
  .nhsuk-subnav .nhsuk-subnav__list .nhsuk-subnav__list-link {
    border-bottom: 4px solid transparent;
    border-top: 4px solid transparent;
    color: #005eb8;
    display: inline-block;
    font-size: 1rem;
    font-weight: 400;
    line-height: 1.5;
    padding: 12px 16px;
    text-decoration: none;
    width: 100%; }
    .nhsuk-subnav .nhsuk-subnav__list .nhsuk-subnav__list-link:visited {
      color: #005eb8;
      text-decoration: none; }
    .nhsuk-subnav .nhsuk-subnav__list .nhsuk-subnav__list-link:hover, .nhsuk-subnav .nhsuk-subnav__list .nhsuk-subnav__list-link:focus {
      text-decoration: underline; }
    .nhsuk-subnav .nhsuk-subnav__list .nhsuk-subnav__list-link:focus {
      color: #212b32; }
    .nhsuk-subnav .nhsuk-subnav__list .nhsuk-subnav__list-link.no-link {
      color: #212b32;
      text-decoration: none;
      cursor: default; }
    @media (min-width: 61.875em) {
      .nhsuk-subnav .nhsuk-subnav__list .nhsuk-subnav__list-link {
        display: block; } }

@media (min-width: 61.875em) {
  .nhsuk-subnav .nhsuk-nav__link {
    padding: 8px 16px; } }

@media (min-width: 61.875em) {
  .nhsuk-subnav .nhsuk-header__back-text {
    display: none; } }

.nhsuk-subnav.is-active .nhsuk-header__navigation-link .nhsuk-icon {
  transform: rotate(90deg); }

.nhsuk-subnav.is-active .nhsuk-subnav__list {
  border: 0;
  display: block;
  left: 0;
  margin-bottom: 0;
  position: inherit;
  width: 100%; }
  @media (min-width: 61.875em) {
    .nhsuk-subnav.is-active .nhsuk-subnav__list {
      display: block;
      left: inherit;
      position: absolute; } }
  @media (min-width: 61.875em) {
    .nhsuk-subnav.is-active .nhsuk-subnav__list .nhsuk-subnav__list-link {
      font-size: 1rem;
      line-height: 1.5; } }

/* Hero */
.nhsuk-hero .nhsuk-hero__wrapper {
  padding: 48px 0 88px; }

.nhsuk-hero .nhsuk-hero--border {
  border: 0; }

.nhsuk-hero--image-description {
  margin-bottom: 50px; }

.nhsuk-hee-hero .nhsuk-hero__wrapper {
  padding: 48px 0 88px; }

.nhsuk-hee-table {
  margin-bottom: 4em !important;
  background-color: #fff; }

.nhsuk-hee-table--multicols {
  width: 100%;
  background-color: #fff; }

.nhsuk-hee-table--multicols caption {
  font-size: 1.375rem;
  line-height: 1.45455; }

.nhsuk-hee-table--multicols .nhsuk-table__head {
  -webkit-clip-path: inset(50%);
  border: 0;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  margin: 0;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px; }

.nhsuk-hee-table--multicols .nhsuk-table__body .nhsuk-table__row {
  display: block;
  margin-bottom: 24px; }

.nhsuk-hee-table--multicols .nhsuk-table__body .nhsuk-table__row .nhsuk-table__cell {
  display: flex;
  justify-content: space-between;
  min-width: 1px;
  padding-right: 0;
  text-align: right; }

.nhsuk-hee-table--multicols .nhsuk-table__body .nhsuk-table__row .nhsuk-table__cell:last-of-type {
  border-bottom: 3px solid #d8dde0; }

.nhsuk-hee-table--multicols .nhsuk-table__body .nhsuk-table__row .nhsuk-table-responsive__heading {
  font-weight: 600;
  padding-right: 16px;
  text-align: left;
  display: block; }

/* NHSUK-Image */
.nhsuk-grid-column-two-thirds .nhsuk-image {
  width: 100%; }

/* Related cards (from live) */
.nhsuk-related-links-card__list {
  list-style-type: none;
  padding-left: 0; }

.nhsuk-related-links-card__list li {
  margin-bottom: 24px; }

.nhsuk-related-links-card__link {
  text-decoration: none; }

.nhsuk-related-links-card__link:hover {
  text-decoration: underline; }

/* Contact (from live) */
.nhsuk-contact {
  margin-bottom: 40px;
  position: relative;
  width: 100%; }

@media (min-width: 40.0625em) {
  .nhsuk-contact {
    margin-bottom: 48px; } }

.nhsuk-contact h2,
.nhsuk-contact h3,
.nhsuk-contact h4,
.nhsuk-contact h5 {
  margin-bottom: 0; }

.nhsuk-contact h4 {
  font-size: 1.1875rem; }

.nhsuk-contact h5 {
  font-size: 1.1875rem;
  font-weight: 400; }

.nhsuk-contact .nhsuk-contact__img-container {
  position: relative;
  margin-bottom: 24px;
  width: 8.375rem;
  height: 8.375rem;
  background: #d8dde0;
  border-radius: 50%;
  font-size: 3rem;
  font-weight: 700;
  text-align: center;
  line-height: 8.375rem;
  color: #4c6272; }

@media print {
  .nhsuk-contact .nhsuk-contact__img-container {
    display: none; } }

.nhsuk-contact .nhsuk-contact__img {
  position: absolute;
  top: 0;
  left: 0;
  display: block;
  width: 8.375rem;
  height: 8.375rem;
  border-radius: 50%;
  object-fit: cover;
  border-bottom: 1px solid #f0f4f5; }

@media print {
  .nhsuk-contact .nhsuk-contact__img {
    display: none; } }

.nhsuk-contact .nhsuk-contact__description,
.nhsuk-contact .nhsuk-contact__heading,
.nhsuk-contact .nhsuk-contact__metadata {
  margin-bottom: 8px; }

.nhsuk-contact .nhsuk-contact hr {
  margin-top: 24px;
  margin-bottom: 24px; }

.nhsuk-contact .nhsuk-contact a {
  word-wrap: break-word; }

.nhsuk-contact .nhsuk-contact__pronoun {
  color: #4c6272; }

.nhsuk-contact .nhsuk-contact__secondary-info p {
  word-wrap: break-word; }

.nhsuk-contact__secondary-info > * {
  margin-bottom: 12px; }

.nhsuk-contact__card .nhsuk-contact__content {
  padding: 24px;
  position: relative; }

.nhsuk-contact__card .nhsuk-contact__content > :first-child {
  margin-top: 0; }

.nhsuk-contact__card .nhsuk-contact__content > :last-child {
  margin-bottom: 0; }

@media (min-width: 40.0625em) {
  .nhsuk-contact__card .nhsuk-contact__content {
    padding: 32px; } }

.nhsuk-contact__card {
  background: #fff;
  border: 1px solid #d8dde0; }

.nhsuk-contact__card .nhsuk-contact__pronoun {
  margin-bottom: 8px; }

.nhsuk-contact__card .nhsuk-contact__secondary-info > * {
  margin-bottom: 12px; }

.nhsuk-contact__card p[aria-label="Address"] {
  font-size: 1.1875rem;
  line-height: 1.47368; }

.nhsuk-contact-group {
  display: flex;
  flex-wrap: wrap;
  margin-bottom: 16px;
  padding: 0; }

@media (max-width: 48.0525em) {
  .nhsuk-contact-group {
    margin-bottom: 40px; } }

.nhsuk-contact-group + .nhsuk-heading-l,
.nhsuk-contact-group + .nhsuk-heading-m,
.nhsuk-contact-group + h2,
.nhsuk-contact-group + h3 {
  padding-top: 0; }

.hee-layout-sidebar .nhsuk-contact-group {
  margin-left: 0;
  margin-right: 0; }

.nhsuk-contact-group__item {
  display: flex;
  list-style-type: none;
  margin-bottom: 0; }

@media (max-width: 48.0525em) {
  .nhsuk-contact-group__item {
    flex: 0 0 100%; } }

.nhsuk-contact-group__item .nhsuk-contact {
  margin-bottom: 32px; }

@media (max-width: 48.0525em) {
  .nhsuk-contact-group__item .nhsuk-contact {
    margin-bottom: 16px; }
  .nhsuk-contact-group__item:last-child .nhsuk-contact {
    margin-bottom: 0; } }

.nhsuk-contact--feature {
  margin-top: 40px; }

@media (min-width: 40.0625em) {
  .nhsuk-contact--feature {
    margin-top: 48px; } }

.nhsuk-contact__heading--feature {
  background: #005eb8;
  color: #fff;
  display: inline-block;
  left: -25px;
  margin-bottom: 8px;
  margin-right: -24px;
  padding: 8px 24px;
  position: relative;
  top: -8px; }

@media (min-width: 40.0625em) {
  .nhsuk-contact__heading--feature {
    left: -33px;
    margin-right: -32px;
    padding: 8px 32px;
    top: -16px; } }

.nhsuk-contact__content--feature {
  padding-top: 0 !important; }

/* Sectionbreak (from live) */
.nhsuk-section-break {
  border: 0;
  margin: 0; }

.nhsuk-section-break--xl {
  margin-top: 48px;
  margin-bottom: 48px; }

.nhsuk-section-break--l {
  margin-top: 32px;
  margin-bottom: 32px; }

.nhsuk-section-break--m {
  margin-top: 16px;
  margin-bottom: 16px; }

.nhsuk-section-break--visible {
  border-bottom: 1px solid #d8dde0; }

/* Homepage sections (from live) */
.nhsuk-homepage {
  background-color: #fff; }

.nhsuk-homepage .nhsuk-section:nth-of-type(odd) {
  background: #f0f4f5; }

.nhsuk-homepage .nhsuk-section__content .nhsuk-action-link {
  padding-top: 8px; }

.nhsuk-section__content {
  padding-bottom: 64px;
  padding-top: 64px; }

.nhsuk-section__content > :first-child {
  margin-top: 0; }

.nhsuk-section__content > :last-child {
  margin-bottom: 0; }

.nhsuk-section__content:empty {
  display: none; }

.nhsuk-section__content h2 {
  padding-top: 0; }

.nhsuk-section__description {
  color: #4c6272; }

.nhsuk-section--with-image {
  position: relative; }

.nhsuk-section--with-image:before {
  background-image: url(/images/crosses.svg);
  background-position: left top;
  background-repeat: no-repeat;
  bottom: 0;
  content: "";
  display: block;
  height: 700px;
  position: absolute;
  right: 0;
  width: 48%; }

.nhsuk-width-container {
  margin: 0 16px;
  max-width: 960px; }

.nhsuk-width-container-fluid {
  margin: 0 16px;
  max-width: 100%; }

.nhsuk-width-container--full {
  margin: 0;
  max-width: none; }

.nhsuk-main-wrapper--no-padding {
  padding: 0; }

@media (min-width: 40.0625em) {
  .nhsuk-section-break--xl {
    margin-top: 56px;
    margin-bottom: 56px; }
  .nhsuk-section-break--l {
    margin-top: 40px;
    margin-bottom: 40px; }
  .nhsuk-section-break--m {
    margin-top: 24px;
    margin-bottom: 24px; }
  .nhsuk-homepage .nhsuk-section:nth-of-type(2) {
    padding-top: 40px; } }

@media (max-width: 48.0525em) {
  .nhsuk-section__content {
    padding-bottom: 48px;
    padding-top: 48px; }
  .nhsuk-section__content + .nhsuk-section__content {
    padding-top: 0; }
  .nhsuk-section--with-image {
    padding-top: 120px; }
  .nhsuk-section--with-image:before {
    background-image: url(/images/crosses-mobile.svg);
    bottom: auto;
    height: 125px;
    left: 0;
    right: auto;
    top: -10px;
    width: 100%; }
  .nhsuk-header__navigation.js-show .nhsuk-width-container {
    margin: 0; } }

@media (max-width: 26.3125em) {
  .nhsuk-homepage .nhsuk-section:nth-of-type(2) {
    padding-top: 40px; } }

@media (min-width: 48.0625em) {
  .nhsuk-width-container {
    margin: 0 32px; }
  .nhsuk-width-container-fluid {
    margin: 0 32px; } }

@media (min-width: 1024px) {
  .nhsuk-width-container {
    margin: 0 auto; } }

@media (max-width: 61.865em) {
  .nhsuk-header__navigation.js-show {
    border-bottom: 4px solid #f0f4f5;
    border-top: 4px solid #f0f4f5; }
  .nhsuk-header__navigation.js-show .nhsuk-width-container {
    margin: 0 16px; } }

/* Related-links-card - old */
.nhsuk-related-links-card__list {
  list-style-type: none;
  padding-left: 0; }

.nhsuk-related-links-card__list li {
  margin-bottom: 24px; }

.nhsuk-related-links-card__link {
  text-decoration: none; }

.nhsuk-related-links-card__link:hover {
  text-decoration: underline; }

/* HEE-Microhero */
.hee-microhero {
  width: 100%;
  height: 260px;
  display: block;
  background-color: #DDD;
  background-size: cover;
  background-position: center center; }

/* HEE-Timeline */
.hee-timeline {
  position: relative;
  margin-top: 64px;
  margin-bottom: 64px;
  padding: 32px 24px 24px;
  background-color: #ffffff;
  border: 1px solid #d8dde0; }
  .hee-timeline .hee-timeline__title {
    position: absolute;
    top: -32px;
    left: 0;
    width: calc(100% - 64px);
    padding: 10px 24px;
    color: #ffffff;
    font-size: 24px;
    line-height: 31px;
    background: #005eb8; }
  .hee-timeline .hee-timeline__event h4 {
    margin-top: 24px;
    margin-bottom: 16px;
    font-size: 1.5rem; }
  .hee-timeline .hee-timeline__event:last-of-type .nhsuk-summary-list {
    margin-bottom: 16px; }

.hee-timeline--noevents {
  position: relative;
  margin-top: 64px;
  margin-bottom: 64px;
  padding: 32px 24px 24px;
  display: block;
  background-color: #ffffff;
  border: 1px solid #d8dde0; }
  .hee-timeline--noevents .hee-timeline__description {
    margin-top: 16px; }
    .hee-timeline--noevents .hee-timeline__description p:last-of-type {
      margin-bottom: 0; }

/* Timeline Card - old */
.nhsuk-timeline-card {
  position: relative;
  margin-top: 64px;
  margin-bottom: 64px;
  padding: 32px 24px 24px;
  background-color: #ffffff;
  border: 1px solid #d8dde0; }
  .nhsuk-timeline-card__title {
    position: absolute;
    top: -32px;
    left: 0;
    width: calc(100% - 64px);
    padding: 10px 24px;
    color: #ffffff;
    font-size: 24px;
    line-height: 31px;
    background: #005eb8; }
  .nhsuk-timeline-card__event h4 {
    margin-top: 24px;
    margin-bottom: 16px;
    font-size: 1.5rem; }
  .nhsuk-timeline-card__event:last-of-type .nhsuk-summary-list {
    margin-bottom: 16px; }

.nhsuk-timeline-card--no-events {
  position: relative;
  margin-top: 64px;
  margin-bottom: 64px;
  padding: 32px 24px 24px;
  display: block;
  background-color: #ffffff;
  border: 1px solid #d8dde0; }
  .nhsuk-timeline-card--no-events .nhsuk-timeline-card__description {
    margin-top: 16px; }
    .nhsuk-timeline-card--no-events .nhsuk-timeline-card__description p:last-of-type {
      margin-bottom: 0; }

/* Filter */
.nhsuk-filter .nhsuk-fieldset__legend {
  border-bottom: 1px solid #d8dde0;
  display: block;
  margin-bottom: 1em;
  padding-bottom: 1em;
  width: 100%; }

.nhsuk-filter__group--closed .nhsuk-checkboxes {
  display: none; }

.nhsuk-filter__group--closed .nhsuk-fieldset__legend {
  margin-bottom: 0; }

.nhsuk-filter--js .nhsuk-fieldset__legend {
  background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 448 512' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill='%23000' d='m240.97 130.52 194.34 194.34c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901 0.04l-154.75-154.02-154.74 154.02c-9.379 9.335-24.544 9.317-33.901-0.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941l194.34-194.34c9.372-9.373 24.568-9.373 33.941-1e-3z'/%3E%3C/svg%3E%0A");
  background-position: .3em .3em;
  background-repeat: no-repeat;
  background-size: .75em;
  color: #005eb8;
  cursor: pointer;
  padding-left: 1.6em; }

.nhsuk-filter--js .nhsuk-filter__group--closed .nhsuk-fieldset__legend {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 448 512'%3E%3Cpath fill='%23000' d='M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z'/%3E%3C/svg%3E"); }

/* FilterTag */
.nhsuk-filter-tag {
  padding: .75em 1em;
  margin: .15em 0; }
  .nhsuk-filter-tag > * {
    display: inline-block;
    vertical-align: middle; }
  .nhsuk-filter-tag__icon {
    height: 1.5em;
    margin-left: .5em; }
  .nhsuk-filter-tag--js {
    cursor: pointer; }

/* NHSUK-Image-Card */
.nhsuk-image--card {
  border: 1px solid #d8dde0;
  background-color: #ffffff;
  padding: 24px;
  margin-left: 0;
  margin-right: 0;
  margin-bottom: 48px; }
  .nhsuk-image--card .nhsuk-image__img {
    max-width: 100%;
    height: auto; }
  .nhsuk-image--card .nhsuk-image__caption {
    font-size: 0.9rem;
    color: #212b32;
    padding: 0;
    margin-top: 16px; }

/* RelatedNav - old */
.nhsuk-related-nav {
  border-top: 2px solid #005eb8; }

.nhsuk-related-nav__heading {
  font-size: 20px;
  font-size: 1.25rem;
  line-height: 1.2;
  margin-bottom: 16px;
  padding-top: 16px; }

.nhsuk-related-nav__list {
  list-style: none;
  margin-bottom: 16px;
  padding-left: 0; }

.nhsuk-related-nav__item {
  font-size: 14px;
  font-size: .875rem;
  line-height: 1.71429; }

.nhsuk-related-nav__sub-heading {
  margin-bottom: 8px;
  padding-top: 8px;
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.2; }

@media print {
  .nhsuk-related-nav__heading {
    font-size: 18pt;
    line-height: 1.2; }
  .nhsuk-related-nav__item {
    font-size: 14pt;
    line-height: 1.2; }
  .nhsuk-related-nav__sub-heading {
    font-size: 14pt;
    line-height: 1.2; } }

@media (min-width: 40.0625em) {
  .nhsuk-related-nav__heading {
    font-size: 24px;
    font-size: 1.5rem;
    line-height: 1.2; }
  .nhsuk-related-nav__item {
    font-size: 16px;
    font-size: 1rem;
    line-height: 1.5; }
  .nhsuk-related-nav__sub-heading {
    margin-bottom: 8px;
    padding-top: 8px;
    font-size: 19px;
    font-size: 1.1875rem;
    line-height: 1.2; } }

@media (max-width: 48.0525em) {
  .nhsuk-related-nav {
    margin-top: 48px; } }

/* HEE-Media */
.hee-media {
  min-width: 288px;
  margin: 40px 0 80px;
  background: #fff;
  padding: 24px 0;
  border-bottom: 4px solid #d8dde0; }
  .hee-media h2 {
    margin: 0 24px 24px; }
  .hee-media iframe {
    max-height: 100%;
    width: 100%;
    margin-bottom: -7px; }
    .hee-media iframe.youtube, .hee-media iframe.vimeo {
      min-height: 210px; }
      @media (min-width: 20em) {
        .hee-media iframe.youtube, .hee-media iframe.vimeo {
          min-height: calc(((100vw - 48px) / 16 * 9) + 48px); } }
      @media (min-width: 40.0625em) {
        .hee-media iframe.youtube, .hee-media iframe.vimeo {
          min-height: calc(((100vw - 48px) / 16 * 9)); } }
    .hee-media iframe.anchor {
      height: 98px; }
  .hee-media .hee-media__description {
    padding: 0 24px 24px; }
    .hee-media .hee-media__description p:last-child {
      margin-bottom: 0; }
  .hee-media .hee-media__info {
    padding: 24px 24px 0; }
  .hee-media .hee-media__reviews p {
    margin: 0;
    font-weight: 400;
    font-size: 14px;
    font-size: 0.875rem;
    line-height: 1.71429;
    color: #4c6272; }
    @media (min-width: 40.0625em) {
      .hee-media .hee-media__reviews p {
        font-size: 16px;
        font-size: 1rem;
        line-height: 1.5; } }
    @media print {
      .hee-media .hee-media__reviews p {
        font-size: 14pt;
        line-height: 1.2; } }
  .hee-media .hee-media__transcript a {
    position: relative;
    display: flex;
    margin-bottom: 16px;
    padding-left: 24px;
    font-size: 1.1875rem;
    font-weight: 600;
    color: #005eb8;
    text-decoration: underline;
    line-height: 34px;
    cursor: pointer; }
    .hee-media .hee-media__transcript a:hover {
      text-decoration: none; }
    .hee-media .hee-media__transcript a:focus {
      color: #212b32;
      text-decoration: underline;
      background: #ffeb3b; }
    .hee-media .hee-media__transcript a span:before {
      bottom: 0;
      content: '';
      left: 0;
      margin: auto;
      position: absolute;
      top: 0;
      display: block;
      width: 0;
      height: 0;
      border-style: solid;
      border-color: transparent;
      clip-path: polygon(0% 0%, 100% 50%, 0% 100%);
      border-width: 8px 0 8px 12px;
      border-left-color: inherit; }
  .hee-media .hee-media__transcript .hee-media__show-text {
    display: block; }
  .hee-media .hee-media__transcript .hee-media__hide-text {
    display: none; }
  .hee-media .hee-media__transcript .hee-media__transcript-text {
    display: none;
    margin-bottom: 24px; }
  .hee-media .hee-media__transcript.hee-media__transcript-expanded a span:before {
    display: block;
    width: 0;
    height: 0;
    border-style: solid;
    border-color: transparent;
    clip-path: polygon(0% 0%, 50% 100%, 100% 0%);
    border-width: 12px 8px 0 8px;
    border-top-color: inherit; }
  .hee-media .hee-media__transcript.hee-media__transcript-expanded .hee-media__transcript-text,
  .hee-media .hee-media__transcript.hee-media__transcript-expanded .hee-media__hide-text {
    display: block; }
  .hee-media .hee-media__transcript.hee-media__transcript-expanded .hee-media__show-text {
    display: none; }

@media (min-width: 48.0625em) {
  .hee-layout__content .hee-media iframe.youtube, .hee-layout__content .hee-media iframe.vimeo {
    min-height: calc(((100vw - 48px) / 16 * 9) - 74px); } }

@media (min-width: 61.875em) {
  .hee-layout__content .hee-media iframe.youtube, .hee-layout__content .hee-media iframe.vimeo {
    min-height: 480px; } }

/* HEE-Media */
.hee-media {
  min-width: 288px;
  margin: 40px 0 80px;
  background: #fff;
  padding: 24px 0;
  border-bottom: 4px solid #d8dde0; }
  .hee-media h2 {
    margin: 0 24px 24px; }
  .hee-media iframe {
    max-height: 100%;
    width: 100%;
    margin-bottom: -7px; }
    .hee-media iframe.youtube, .hee-media iframe.vimeo {
      min-height: 210px; }
      @media (min-width: 20em) {
        .hee-media iframe.youtube, .hee-media iframe.vimeo {
          min-height: calc(((100vw - 48px) / 16 * 9) + 48px); } }
      @media (min-width: 40.0625em) {
        .hee-media iframe.youtube, .hee-media iframe.vimeo {
          min-height: calc(((100vw - 48px) / 16 * 9)); } }
    .hee-media iframe.anchor {
      height: 98px; }
  .hee-media .hee-media__description {
    padding: 0 24px 24px; }
    .hee-media .hee-media__description p:last-child {
      margin-bottom: 0; }
  .hee-media .hee-media__info {
    padding: 24px 24px 0; }
  .hee-media .hee-media__reviews p {
    margin: 0;
    font-weight: 400;
    font-size: 14px;
    font-size: 0.875rem;
    line-height: 1.71429;
    color: #4c6272; }
    @media (min-width: 40.0625em) {
      .hee-media .hee-media__reviews p {
        font-size: 16px;
        font-size: 1rem;
        line-height: 1.5; } }
    @media print {
      .hee-media .hee-media__reviews p {
        font-size: 14pt;
        line-height: 1.2; } }
  .hee-media .hee-media__transcript a {
    position: relative;
    display: flex;
    margin-bottom: 16px;
    padding-left: 24px;
    font-size: 1.1875rem;
    font-weight: 600;
    color: #005eb8;
    text-decoration: underline;
    line-height: 34px;
    cursor: pointer; }
    .hee-media .hee-media__transcript a:hover {
      text-decoration: none; }
    .hee-media .hee-media__transcript a:focus {
      color: #212b32;
      text-decoration: underline;
      background: #ffeb3b; }
    .hee-media .hee-media__transcript a span:before {
      bottom: 0;
      content: '';
      left: 0;
      margin: auto;
      position: absolute;
      top: 0;
      display: block;
      width: 0;
      height: 0;
      border-style: solid;
      border-color: transparent;
      clip-path: polygon(0% 0%, 100% 50%, 0% 100%);
      border-width: 8px 0 8px 12px;
      border-left-color: inherit; }
  .hee-media .hee-media__transcript .hee-media__show-text {
    display: block; }
  .hee-media .hee-media__transcript .hee-media__hide-text {
    display: none; }
  .hee-media .hee-media__transcript .hee-media__transcript-text {
    display: none;
    margin-bottom: 24px; }
  .hee-media .hee-media__transcript.hee-media__transcript-expanded a span:before {
    display: block;
    width: 0;
    height: 0;
    border-style: solid;
    border-color: transparent;
    clip-path: polygon(0% 0%, 50% 100%, 100% 0%);
    border-width: 12px 8px 0 8px;
    border-top-color: inherit; }
  .hee-media .hee-media__transcript.hee-media__transcript-expanded .hee-media__transcript-text,
  .hee-media .hee-media__transcript.hee-media__transcript-expanded .hee-media__hide-text {
    display: block; }
  .hee-media .hee-media__transcript.hee-media__transcript-expanded .hee-media__show-text {
    display: none; }

@media (min-width: 48.0625em) {
  .hee-layout__content .hee-media iframe.youtube, .hee-layout__content .hee-media iframe.vimeo {
    min-height: calc(((100vw - 48px) / 16 * 9) - 74px); } }

@media (min-width: 61.875em) {
  .hee-layout__content .hee-media iframe.youtube, .hee-layout__content .hee-media iframe.vimeo {
    min-height: 480px; } }

/* NHSUK-Map - need swapping to HEE-Navmap */
.nhsuk-map {
  display: flex;
  margin-bottom: 32px;
  margin-top: 32px;
  margin-left: 0;
  margin-right: 0;
  padding: 40px 0; }
  @media (min-width: 40.0625em) {
    .nhsuk-map {
      margin-bottom: 40px; } }
  @media (min-width: 40.0625em) {
    .nhsuk-map {
      margin-top: 40px; } }
  .nhsuk-map + .nhsuk-map {
    margin-top: 0; }
    @media (min-width: 40.0625em) {
      .nhsuk-map + .nhsuk-map {
        margin-top: 0; } }

.nhsuk-map__image {
  display: block;
  width: 50%; }

.nhsuk-map__image {
  display: none; }

.nhsuk-map__caption {
  font-size: 14px;
  font-size: 0.875rem;
  line-height: 1.71429; }
  @media (min-width: 40.0625em) {
    .nhsuk-map__caption {
      font-size: 16px;
      font-size: 1rem;
      line-height: 1.5; } }
  @media print {
    .nhsuk-map__caption {
      font-size: 14pt;
      line-height: 1.2; } }
  .nhsuk-map__caption .nhsuk-map__description {
    width: 100%;
    text-align: left;
    margin-bottom: 32px; }
    .nhsuk-map__caption .nhsuk-map__description h3 {
      margin-bottom: 24px; }
  .nhsuk-map__caption ul {
    margin: 0;
    padding: 0;
    list-style: none; }
    .nhsuk-map__caption ul li {
      margin-bottom: 24px; }
      .nhsuk-map__caption ul li a {
        display: block;
        width: 100%;
        text-decoration: none; }
        .nhsuk-map__caption ul li a.hover, .nhsuk-map__caption ul li a:hover {
          text-decoration: underline; }
        .nhsuk-map__caption ul li a:visited {
          color: #005eb8; }

@media (min-width: 40.0625em) {
  .nhsuk-map .nhsuk-map__image {
    display: block; }
  .nhsuk-map .nhsuk-map__caption {
    width: 50%;
    margin-right: 24px; } }

/* RelatedNav - old */
.nhsuk-related-nav {
  border-top: 2px solid #005eb8; }

.nhsuk-related-nav__heading {
  font-size: 20px;
  font-size: 1.25rem;
  line-height: 1.2;
  margin-bottom: 16px;
  padding-top: 16px; }

.nhsuk-related-nav__list {
  list-style: none;
  margin-bottom: 16px;
  padding-left: 0; }

.nhsuk-related-nav__item {
  font-size: 14px;
  font-size: .875rem;
  line-height: 1.71429; }

.nhsuk-related-nav__sub-heading {
  margin-bottom: 8px;
  padding-top: 8px;
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.2; }

@media print {
  .nhsuk-related-nav__heading {
    font-size: 18pt;
    line-height: 1.2; }
  .nhsuk-related-nav__item {
    font-size: 14pt;
    line-height: 1.2; }
  .nhsuk-related-nav__sub-heading {
    font-size: 14pt;
    line-height: 1.2; } }

@media (min-width: 40.0625em) {
  .nhsuk-related-nav__heading {
    font-size: 24px;
    font-size: 1.5rem;
    line-height: 1.2; }
  .nhsuk-related-nav__item {
    font-size: 16px;
    font-size: 1rem;
    line-height: 1.5; }
  .nhsuk-related-nav__sub-heading {
    margin-bottom: 8px;
    padding-top: 8px;
    font-size: 19px;
    font-size: 1.1875rem;
    line-height: 1.2; } }

@media (max-width: 48.0525em) {
  .nhsuk-related-nav {
    margin-top: 48px; } }

/* NHSUK-Resources__link - old */
.nhsuk-resources__link .nhsuk-resources__tag,
.nhsuk-resources__link .nhsuk-resources__docSize {
  text-decoration: none; }

.nhsuk-resources__link .nhsuk-resources__tag {
  display: inline-block;
  position: relative;
  top: -1px;
  min-width: 40px;
  margin: 0 8px;
  padding: 2px 8px;
  color: #ffffff;
  font-size: .75em;
  text-align: center;
  text-transform: uppercase;
  border-radius: 12px; }

.nhsuk-resources__link .nhsuk-resources__pdf {
  background-color: #F40F02; }

.nhsuk-resources__link .nhsuk-resources__doc,
.nhsuk-resources__link .nhsuk-resources__docx {
  background-color: #2b579a; }

.nhsuk-resources__link .nhsuk-resources__xls,
.nhsuk-resources__link .nhsuk-resources__xlsx,
.nhsuk-resources__link .nhsuk-resources__csv {
  background-color: #1D6F42; }

.nhsuk-resources__link .nhsuk-resources__txt {
  background-color: #768692; }

.nhsuk-resources__link .nhsuk-resources__odt,
.nhsuk-resources__link .nhsuk-resources__ott,
.nhsuk-resources__link .nhsuk-resources__fodt {
  background-color: #456697; }

.nhsuk-resources__link .nhsuk-resources__ods,
.nhsuk-resources__link .nhsuk-resources__ots,
.nhsuk-resources__link .nhsuk-resources__fods {
  background-color: #8abf1c; }

.nhsuk-resources__link .nhsuk-resources__odf,
.nhsuk-resources__link .nhsuk-resources__fodf {
  background-color: #106f5a; }

.nhsuk-resources__link .nhsuk-resources__odp,
.nhsuk-resources__link .nhsuk-resources__otp,
.nhsuk-resources__link .nhsuk-resources__fodp {
  background-color: #f1662d; }

.nhsuk-resources__link .nhsuk-resources__oth {
  background-color: #737373; }

.nhsuk-resources__link .nhsuk-resources__odg,
.nhsuk-resources__link .nhsuk-resources__fodg,
.nhsuk-resources__link .nhsuk-resources__otg {
  background-color: #e4a204; }

.nhsuk-resources__link .nhsuk-resources__odb,
.nhsuk-resources__link .nhsuk-resources__fodb {
  background-color: #a5265b; }

.nhsuk-resources__link .nhsuk-resources__odm,
.nhsuk-resources__link .nhsuk-resources__fodm {
  background-color: #344c84; }

.nhsuk-resources__link .nhsuk-resources__docSize {
  display: inline-block;
  color: #768692; }

.nhsuk-resources__list {
  list-style-type: none;
  padding-left: 0; }

.nhsuk-hee-table {
  background-color: #fff;
  padding: 16px; }

.nhsuk-hee-table caption {
  background-color: #fff;
  padding: 16px 16px 0 16px; }

/* HEE-AppliesTo */
.hee-appliesto {
  margin-top: 56px;
  padding: 24px;
  margin-top: 48px;
  background-color: #005eb8; }

.hee-appliesto p {
  color: #FFF;
  margin-bottom: 0;
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.5; }

.hee-appliesto a {
  color: #FFF; }

.hee-appliesto span {
  font-weight: bold; }

/* HEE-AnchorLinks */
.hee-anchorlinks {
  background-color: #FFF;
  padding: 24px;
  margin-bottom: 40px; }
  .hee-anchorlinks h2 {
    font-size: 18px;
    font-size: 1.125rem;
    line-height: 1.55556;
    display: block;
    font-weight: 600;
    margin-top: 0;
    margin-bottom: 8px; }
    @media (min-width: 40.0625em) {
      .hee-anchorlinks h2 {
        font-size: 22px;
        font-size: 1.375rem;
        line-height: 1.45455; } }
    @media print {
      .hee-anchorlinks h2 {
        font-size: 18pt;
        line-height: 1.15; } }
    @media (min-width: 40.0625em) {
      .hee-anchorlinks h2 {
        margin-bottom: 16px; } }
  .hee-anchorlinks ul {
    font-size: 16px;
    font-size: 1rem;
    line-height: 1.5;
    margin-bottom: 0;
    list-style-type: none;
    margin-top: 0;
    padding-left: 0; }
    @media (min-width: 40.0625em) {
      .hee-anchorlinks ul {
        font-size: 19px;
        font-size: 1.1875rem;
        line-height: 1.47368; } }
    @media print {
      .hee-anchorlinks ul {
        font-size: 14pt;
        line-height: 1.15; } }
    @media (min-width: 40.0625em) {
      .hee-anchorlinks ul {
        margin-bottom: 0; } }
    .hee-anchorlinks ul li {
      font-size: 14px;
      font-size: 0.875rem;
      line-height: 1.71429;
      display: block;
      margin-top: 0;
      margin-bottom: 8px; }
      @media (min-width: 40.0625em) {
        .hee-anchorlinks ul li {
          font-size: 16px;
          font-size: 1rem;
          line-height: 1.5; } }
      @media print {
        .hee-anchorlinks ul li {
          font-size: 14pt;
          line-height: 1.2; } }
      @media (min-width: 40.0625em) {
        .hee-anchorlinks ul li {
          margin-bottom: 8px; } }

/* NHSUK-HEE-PhaseBanner - swap to HEE-PhaseBanner */
.nhsuk-hee-phasebanner {
  padding-top: 8px;
  padding-bottom: 8px;
  border-bottom: 1px solid #d8dde0; }
  .nhsuk-hee-phasebanner .nhsuk-hee-phasebanner__content {
    font-weight: 400;
    font-size: 14px;
    font-size: 0.875rem;
    line-height: 1.71429;
    margin: 0; }
    @media (min-width: 40.0625em) {
      .nhsuk-hee-phasebanner .nhsuk-hee-phasebanner__content {
        font-size: 16px;
        font-size: 1rem;
        line-height: 1.5; } }
    @media print {
      .nhsuk-hee-phasebanner .nhsuk-hee-phasebanner__content {
        font-size: 14pt;
        line-height: 1.2; } }
  .nhsuk-hee-phasebanner .nhsuk-hee-phasebanner__tag {
    display: inline-block;
    vertical-align: middle;
    padding: 8px 16px;
    line-height: 1em;
    color: #FFF;
    margin-right: 8px;
    background-color: #005eb8;
    font-weight: bold;
    text-transform: uppercase; }
    @media (max-width: 48.0525em) {
      .nhsuk-hee-phasebanner .nhsuk-hee-phasebanner__tag {
        line-height: 1.5; } }

.nhsuk-hee-phasebanner--notag .nhsuk-hee-phasebanner__tag {
  display: none !important; }

.nhsuk-tabs {
  margin: 0 0 48px;
  position: relative; }
  .nhsuk-tabs .nhsuk-tabs__mobile {
    display: none; }
  @media (max-width: 48.0525em) {
    .nhsuk-tabs .nhsuk-tabs__desktop {
      display: none; }
    .nhsuk-tabs .nhsuk-tabs__mobile {
      display: block; }
      .nhsuk-tabs .nhsuk-tabs__mobile .nhsuk-tabs__list {
        display: block; } }
  .nhsuk-tabs .nhsuk-tabs__list {
    display: flex;
    list-style: none;
    padding: 0; }
    .nhsuk-tabs .nhsuk-tabs__list .nhsuk-tabs__list-item {
      display: flex;
      align-items: center;
      text-align: left;
      width: 100%;
      border-bottom: 0;
      border: 1px solid #ffffff;
      background-color: #005eb8;
      margin: 0;
      background-image: url("data:image/svg+xml,%3Csvg class='nhsuk-icon nhsuk-icon__plus' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='32' aria-hidden='true'%3E%3Ccircle cx='12' cy='12' r='10' fill='none'%3E%3C/circle%3E%3Cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M12 8v8M8 12h8'%3E%3C/path%3E%3C/svg%3E%0A");
      background-position: right 4px center;
      background-repeat: no-repeat;
      box-shadow: inset 0 -4px 0 #004b93;
      font-size: 1rem;
      line-height: 1.2;
      color: #ffffff;
      padding: 16px 32px 16px 16px;
      position: relative;
      text-decoration: none;
      cursor: pointer; }
      .nhsuk-tabs .nhsuk-tabs__list .nhsuk-tabs__list-item:focus {
        background: #ffeb3b;
        background-image: url("data:image/svg+xml,%3Csvg class='nhsuk-icon nhsuk-icon__plus' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='32' aria-hidden='true'%3E%3Ccircle cx='12' cy='12' r='10' fill='none'%3E%3C/circle%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M12 8v8M8 12h8'%3E%3C/path%3E%3C/svg%3E%0A");
        background-position: right 4px center;
        background-repeat: no-repeat;
        box-shadow: inset 0 -4px 0 #212b32;
        color: #212b32;
        text-decoration: none; }
      .nhsuk-tabs .nhsuk-tabs__list .nhsuk-tabs__list-item:active {
        background-image: url("data:image/svg+xml,%3Csvg class='nhsuk-icon nhsuk-icon__plus' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='32' aria-hidden='true'%3E%3Ccircle cx='12' cy='12' r='10' fill='none'%3E%3C/circle%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M12 8v8M8 12h8'%3E%3C/path%3E%3C/svg%3E%0A");
        color: #212b32; }
    .nhsuk-tabs .nhsuk-tabs__list .nhsuk-tabs__list-item.nhsuk-tabs__list-item--selected {
      background: #FFF;
      background-image: url("data:image/svg+xml,%3Csvg class='nhsuk-icon nhsuk-icon__minus' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='32' aria-hidden='true'%3E%3Ccircle cx='12' cy='12' r='10' fill='none'%3E%3C/circle%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M8 12h8'%3E%3C/path%3E%3C/svg%3E%0A");
      background-position: right 4px center;
      background-repeat: no-repeat;
      box-shadow: none;
      font-weight: 600;
      color: #212b32;
      cursor: unset; }
  .nhsuk-tabs .nhsuk-tabs__panel {
    margin-bottom: 0;
    padding: 40px 24px;
    background-color: #ffffff;
    padding: 16px; }
    @media (min-width: 40.0625em) {
      .nhsuk-tabs .nhsuk-tabs__panel {
        margin-bottom: 0; } }
    .nhsuk-tabs .nhsuk-tabs__panel img {
      max-width: 100%; }

/* Tables 2 - duplicate? */
table {
  background-color: #fff;
  padding: 16px; }

table caption {
  background-color: #fff;
  padding: 16px 16px 0 16px; }

.nhsuk-hee-table {
  margin-bottom: 4em !important;
  background-color: #fff; }

@media (max-width: 48.0525em) {
  .nhsuk-table-responsive .nhsuk-table__body .nhsuk-table__row {
    display: block;
    margin-bottom: 24px; }
  .nhsuk-table-responsive .nhsuk-table__body .nhsuk-table__row .nhsuk-table__cell {
    display: block;
    min-width: 1px;
    padding-right: 0;
    text-align: right; }
  .nhsuk-table-responsive .nhsuk-table__body .nhsuk-table__row .nhsuk-table__cell:last-of-type {
    border-bottom: 3px solid #d8dde0; }
  .nhsuk-table-responsive .nhsuk-table__body .nhsuk-table__row .nhsuk-table-responsive__heading {
    width: 50%;
    font-weight: 600;
    padding-right: 16px;
    text-align: left;
    display: inline-block;
    float: left; } }

.nhsuk-hee-table--multicols {
  width: 100%;
  background-color: #fff; }

.nhsuk-hee-table--multicols caption {
  font-size: 1.375rem;
  line-height: 1.45455; }

.nhsuk-hee-table--multicols .nhsuk-table__head {
  -webkit-clip-path: inset(50%);
  border: 0;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  margin: 0;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px; }

.nhsuk-hee-table--multicols .nhsuk-table__body .nhsuk-table__row {
  display: block;
  margin-bottom: 24px; }

.nhsuk-hee-table--multicols .nhsuk-table__body .nhsuk-table__row .nhsuk-table__cell {
  display: block;
  min-width: 1px;
  padding-right: 0;
  text-align: right; }

.nhsuk-hee-table--multicols .nhsuk-table__body .nhsuk-table__row .nhsuk-table__cell:last-of-type {
  border-bottom: 3px solid #d8dde0; }

.nhsuk-hee-table--multicols .nhsuk-table__body .nhsuk-table__row .nhsuk-table-responsive__heading {
  width: 50%;
  font-weight: 600;
  padding-right: 16px;
  text-align: left;
  display: inline-block;
  float: left; }

/* HEE-GlobalAlert */
.hee-globalalert {
  background-color: #ffeb3b;
  padding-bottom: 24px;
  padding-top: 24px; }
  @media print {
    .hee-globalalert {
      display: none; } }
  .hee-globalalert .hee-globalalert__message {
    position: relative; }
    .hee-globalalert .hee-globalalert__message > *:first-child {
      margin-top: 0; }
    .hee-globalalert .hee-globalalert__message > *:last-child {
      margin-bottom: 0; }
    .hee-globalalert .hee-globalalert__message h1 {
      margin-bottom: 24px;
      line-height: 56px; }
    .hee-globalalert .hee-globalalert__message h2, .hee-globalalert .hee-globalalert__message h3 {
      font-size: 24px;
      line-height: 1.33333;
      margin: 0; }
    .hee-globalalert .hee-globalalert__message p {
      margin-top: 8px;
      font-size: 16px;
      line-height: 1.5;
      display: block;
      margin-bottom: 16px; }
      @media (min-width: 40.0625em) {
        .hee-globalalert .hee-globalalert__message p {
          margin-top: 8px; } }
      .hee-globalalert .hee-globalalert__message p:last-of-type {
        margin-bottom: 0; }
    .hee-globalalert .hee-globalalert__message a {
      color: #005eb8; }
      .hee-globalalert .hee-globalalert__message a:focus {
        background-color: #003d78;
        box-shadow: 0 0 0 4px #003d78;
        color: #ffffff;
        outline: 4px solid transparent;
        outline-offset: 4px; }
      .hee-globalalert .hee-globalalert__message a:hover {
        background-color: #005eb8;
        box-shadow: 0 0 0 4px #005eb8;
        color: #ffffff; }
      .hee-globalalert .hee-globalalert__message a:active {
        background-color: #002f5c;
        box-shadow: 0 0 0 4px #003d78;
        color: #ffffff; }

.hee-globalalert--black {
  background-color: #000;
  color: #FFF;
  padding-top: 40px;
  padding-bottom: 40px; }
  .hee-globalalert--black .hee-globalalert__message h2 {
    font-size: 24px;
    font-size: 1.5rem;
    line-height: 1.25;
    margin-bottom: 0; }
  .hee-globalalert--black .hee-globalalert__message h2 ~ p {
    margin-top: 0;
    margin-bottom: 24px; }
  .hee-globalalert--black .hee-globalalert__message p {
    font-size: 1.1875rem;
    line-height: 1.3157894737; }
  .hee-globalalert--black .hee-globalalert__message a {
    color: #FFF; }

<<<<<<< HEAD
/* ==========================================================================
   COMPONENTS / #HEE-SIDEBARIMAGE
   ========================================================================== */
.hee-sidebarimage {
  border: 1px solid #d8dde0;
  background-color: #ffffff;
  padding: 24px;
  margin-left: 0;
  margin-right: 0;
  margin-bottom: 48px; }
  .hee-sidebarimage .hee-sidebarimage__img {
    max-width: 100%;
    height: auto; }
  .hee-sidebarimage .hee-sidebarimage__caption {
    font-size: 0.9rem;
    color: #212b32;
    padding: 0;
    margin-top: 16px; }

/* ==========================================================================
   COMPONENTS / #SIDEBARLINKS - related, download, resources
   ========================================================================== */
.hee-sidebarlinks {
  margin-bottom: 40px;
  background: #fff;
  border: 1px solid #d8dde0;
  position: relative;
  width: 100%; }
  .hee-sidebarlinks .hee-sidebarlinks__content {
    padding: 32px; }
  .hee-sidebarlinks .hee-sidebarlinks__list {
    list-style-type: none;
    padding: 0;
    margin: 0; }
    .hee-sidebarlinks .hee-sidebarlinks__list li::last-of-type {
      margin-bottom: 0; }
  .hee-sidebarlinks .hee-sidebarlinks__link {
    text-decoration: none; }
    .hee-sidebarlinks .hee-sidebarlinks__link:hover {
      text-decoration: underline; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
=======
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
>>>>>>> NWPS-1162-NWP-Prototype-structure-tweaks
