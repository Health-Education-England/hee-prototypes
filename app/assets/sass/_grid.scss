// Grid
//@use "sass:math";

$grid-columns: 12;

@mixin hee-flexgrid-row(
    $flex-display: flex,
    $flex-direction: null, 
    $flex-wrap: wrap, 
    $flex-flow: null, 
    $justify-content: null, 
    $align-items: null, 
    $align-content: null, 
    $gutter: null
) {
	box-sizing: border-box;
    @if $flex-display {
		display: $flex-display;
	}
	@if $flex-direction {
		flex-direction: $flex-direction;
	}
	@if $flex-wrap {
		flex-wrap: $flex-wrap;
	}
	@if $flex-flow {
		flex-flow: $flex-flow;
	}
	@if $justify-content {
		justify-content: $justify-content;
	}
	@if $align-items {
		align-items: $align-items;
	}
	@if $align-content {
		align-content: $align-content;
	}
	@if $gutter {
        margin-left: -($gutter * 0.5);
        margin-right: -($gutter * 0.5);
    }
    @include browser(ie) {
        &:after {
            content: "";
            display: table;
            clear: both;
        }
    }
	@content;
}

@mixin hee-flexgrid-col(
    $col: null, 
    $grid-columns: $grid-columns, 
    $col-offset: null, 
    $important: null,
    $gutter: null, 
    $align-self: null, 
    $flex-grow: 0, 
    $flex-shrink: 1, 
    $flex-basis: auto, 
    $order: null
) {
	box-sizing: border-box;
	@if type-of($col) == number {
		$flex-grow: 0;
		$flex-shrink: 0;
        
        @if unit($col) == 'px' or unit($col) == '%' {
            @if $important == true {
                width: $col;
                $flex-basis: $col;
            } @else {
                width: $col!important;
                $flex-basis: $col!important;
            }

        } @else {
            @if $important == true {
                $flex-basis: percentage($col / $grid-columns)!important;
                width: percentage($col / $grid-columns) !important;
            } @else {
                width: percentage($col / $grid-columns);
                $flex-basis: percentage($col / $grid-columns);
            }
        }

	} @else if type-of($col) == string and $col == 'auto' {
		$flex-grow: 1;
		$flex-shrink: 1;
		$flex-basis: auto;
		max-width: 100%;
		width: auto;
	} @else if type-of($col) == string and $col == 'equal' {
		$flex-grow: 1;
		$flex-shrink: 1;
		$flex-basis: 0;
    } @else if type-of($col) == string and $col == 'breakpoint' {
		$flex-grow: 0;
		$flex-shrink: 1;
		$flex-basis: auto;
		width: 100%;
	} @else if type-of($col) == string and $col == 'none' {
		$flex-grow: 0;
		$flex-shrink: 0;
		$flex-basis: auto;
    } @else {
        $flex-grow: 1;
		$flex-shrink: 1;
		$flex-basis: 0;
    }
    @if $gutter and unitless($gutter) == false {
        padding: 0 $gutter * 0.5;
    }
	flex: $flex-grow $flex-shrink $flex-basis;
    @if $col-offset and unitless($col-offset) == true {
        margin-left: percentage($col-offset / $grid-columns);
    }
	@if $align-self {
		align-self: $align-self;
	}
	@if type-of($order) == number {
		order: $order;
	}

    //@include browser(ie) {
        //float: left; 
        //flex: none;
    //}
    
    /*@include browser(ie) {
        display: inline-block;
        margin-right: -4px;
        vertical-align: top;
        flex: none!important;
    }*/
    
	@content;
}

